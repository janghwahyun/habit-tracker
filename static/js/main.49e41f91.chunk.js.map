{"version":3,"sources":["components/habit.jsx","components/input.jsx","components/habits.jsx","components/navbar.jsx","reportWebVitals.js","app.jsx","components/simpleHabit.jsx","index.js"],"names":["Habit","state","count","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","this","name","className","onClick","class","PureComponent","Input","memo","formRef","React","createRef","inputRef","ref","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","handleAdd","habits","map","id","onReset","Navbar","totalcount","reportWebVitals","Component","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SimpleHabit","useState","setCount","spanRef","useRef","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAwDeA,E,4MArDbC,MAAQ,CAAEC,MAAO,G,EAcjBC,gBAAkB,WAChB,EAAKC,MAAMC,YAAY,EAAKD,MAAME,Q,EAEpCC,gBAAkB,WAChB,EAAKH,MAAMI,YAAY,EAAKJ,MAAME,Q,EAEpCG,aAAe,WACb,EAAKL,MAAMM,SAAS,EAAKN,MAAME,Q,4CAGjC,WAAU,IAAD,EACiBK,KAAKP,MAAME,MAA3BM,EADD,EACCA,KAAMV,EADP,EACOA,MACd,OACE,qBAAIW,UAAU,QAAd,UACE,sBAAMA,UAAU,aAAhB,SAA8BD,IAC9B,sBAAMC,UAAU,cAAhB,SAA+BX,IAC/B,wBACEW,UAAU,8BACVC,QAASH,KAAKR,gBAFhB,SAIE,mBAAGY,MAAM,yBAEX,wBACEF,UAAU,8BACVC,QAASH,KAAKJ,gBAFhB,SAIE,mBAAGQ,MAAM,0BAEX,wBACEF,UAAU,4BACVC,QAASH,KAAKF,aAFhB,SAIE,mBAAGM,MAAM,0B,GA/CCC,iBC8BLC,EA5BDC,gBAAK,SAAAd,GAEjB,IAAMe,EAAUC,IAAMC,YAChBC,EAAWF,IAAMC,YAWvB,OAEE,cADA,CACA,QAAME,IAAKJ,EAASN,UAAU,WAAWW,SAV1B,SAAAC,GACfA,EAAMC,iBAEN,IAAMd,EAAOU,EAASK,QAAQC,MAC9BhB,GAAQR,EAAMyB,MAAMjB,GAEpBO,EAAQQ,QAAQG,SAIhB,UACE,uBACEP,IAAKD,EACLS,KAAK,OACLlB,UAAU,YACVmB,YAAY,UAEd,wBAAQnB,UAAU,aAAlB,uBCkBSoB,E,4MAvCb9B,gBAAkB,SAAAG,GAChB,EAAKF,MAAMC,YAAYC,I,EAEzBC,gBAAkB,SAAAD,GAChB,EAAKF,MAAMI,YAAYF,I,EAEzBG,aAAe,SAAAH,GACb,EAAKF,MAAMM,SAASJ,I,EAGtB4B,UAAY,SAAAtB,GACV,EAAKR,MAAMyB,MAAMjB,I,4CAGnB,WAAU,IAAD,OACP,OACE,qCACE,cAAC,EAAD,CAAOiB,MAAOlB,KAAKuB,YACnB,6BACGvB,KAAKP,MAAM+B,OAAOC,KAAI,SAAA9B,GAAK,OAG1B,aAFA,CAEC,EAAD,CAEEA,MAAOA,EACPD,YAAa,EAAKF,gBAClBK,YAAa,EAAKD,gBAClBG,SAAU,EAAKD,cAJVH,EAAM+B,SAQjB,wBAAQxB,UAAU,eAAeC,QAASH,KAAKP,MAAMkC,QAArD,8B,GAhCatB,iBCSNuB,E,4JAXb,WACE,OACE,sBAAK1B,UAAU,SAAf,UACE,mBAAGA,UAAU,4BACb,iDACA,sBAAMA,UAAU,iBAAhB,SAAkCF,KAAKP,MAAMoC,oB,GANhCxB,iBCUNyB,GCPGC,YDLM,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,gBEiBCQ,EAtBK,SAAA/C,GAAU,IAAD,EACDgD,mBAAS,GADR,mBACpBlD,EADoB,KACbmD,EADa,KAErBC,EAAUC,mBAMhB,OACE,qBAAI1C,UAAU,QAAd,UACE,sBAAMU,IAAK+B,EAASzC,UAAU,aAA9B,qBAGA,sBAAMA,UAAU,8BAA8BC,QAT1B,WACtBuC,EAASnD,EAAQ,IAQf,SACGA,IAEH,iCACE,mBAAGW,UAAU,kCCXrB2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BnB,M","file":"static/js/main.49e41f91.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\n\nclass Habit extends PureComponent {\n  state = { count: 0 };\n\n  // handleIncrement = () => {\n  //   this.setState({ count: this.state.count + 1 });\n  // };\n\n  // handleDecrement = () => {\n  //   const count = this.state.count - 1;\n  //   this.setState({ count: count < 0 ? 0 : count });\n  // };\n\n  // handleDelete = () => {\n  //   this.setState({ count: 0 });\n  // };\n  handleIncrement = () => {\n    this.props.onIncrement(this.props.habit);\n  };\n  handleDecrement = () => {\n    this.props.onDecrement(this.props.habit);\n  };\n  handleDelete = () => {\n    this.props.onDelete(this.props.habit);\n  };\n\n  render() {\n    const { name, count } = this.props.habit;\n    return (\n      <li className=\"habit\">\n        <span className=\"habit-name\">{name}</span>\n        <span className=\"habit-count\">{count}</span>\n        <button\n          className=\"habit-button habit-increase\"\n          onClick={this.handleIncrement}\n        >\n          <i class=\"fas fa-plus-square\"></i>\n        </button>\n        <button\n          className=\"habit-button habit-decrease\"\n          onClick={this.handleDecrement}\n        >\n          <i class=\"fas fa-minus-square\"></i>\n        </button>\n        <button\n          className=\"habit-button habit-delete\"\n          onClick={this.handleDelete}\n        >\n          <i class=\"fas fa-trash\"></i>\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Habit;\n","import React, { memo } from 'react';\nimport reactDom from 'react-dom';\n\n// memo는 안에 porps가 변하지 않으면 pure component처럼 변하지 않는다\nconst Input = memo(props => {\n  //ref를 호출하고 간단하게 원하는 요소에 절달해 주면 됨\n  const formRef = React.createRef();\n  const inputRef = React.createRef();\n\n  // onSumit이라는 멤버 변수가 있음\n  const onSubmit = event => {\n    event.preventDefault(); //브라우저의 기본 기능을 취소해줌(event가 발생 될 때, 페이지가 초기화되는 기능)\n    // console.log(this.inputRef.current.value);\n    const name = inputRef.current.value;\n    name && props.onAdd(name); //이름이 있다면(텅텅비어있지않다면) onadd에 name을 전달해 줄거임.\n    // this.inputRef.current.value = ''; //내가 input에 입력한것을 초기화 해줌.\n    formRef.current.reset();\n  };\n  return (\n    // 사용자가 버튼을 누르면 onSumit의 콜백이 호출 됨\n    <form ref={formRef} className=\"add_form\" onSubmit={onSubmit}>\n      <input\n        ref={inputRef}\n        type=\"text\"\n        className=\"add-input\"\n        placeholder=\"Habit\"\n      ></input>\n      <button className=\"add-button\">Add</button>\n    </form>\n  );\n});\n\nexport default Input;\n","import React, { PureComponent } from 'react';\nimport Habit from './habit';\nimport Input from './input';\n\n//멤버함수 변수를 굳히 하지 않을 방법을 생각해봐\nclass Habits extends PureComponent {\n  handleIncrement = habit => {\n    this.props.onIncrement(habit); //props에 전달된 onincrement의 habit을 전달해줌.\n  };\n  handleDecrement = habit => {\n    this.props.onDecrement(habit);\n  };\n  handleDelete = habit => {\n    this.props.onDelete(habit);\n  };\n\n  handleAdd = name => {\n    this.props.onAdd(name);\n  };\n\n  render() {\n    return (\n      <>\n        <Input onAdd={this.handleAdd} />\n        <ul>\n          {this.props.habits.map(habit => (\n            //habit이라는 props이름에 우리가 각각의 habit을 줄거임\n            //habit이라는 componenet 줄거임\n            <Habit\n              key={habit.id}\n              habit={habit}\n              onIncrement={this.handleIncrement}\n              onDecrement={this.handleDecrement}\n              onDelete={this.handleDelete}\n            />\n          ))}\n        </ul>\n        <button className=\"habits-reset\" onClick={this.props.onReset}>\n          Reset All\n        </button>\n      </>\n    );\n  }\n}\n\nexport default Habits;\n","import React, { PureComponent } from 'react';\n\nclass Navbar extends PureComponent {\n  render() {\n    return (\n      <nav className=\"nabvar\">\n        <i className=\"nabvar-logo fas fa-leaf\"></i>\n        <span>Habit Tracker</span>\n        <span className=\"nabvar counter\">{this.props.totalcount}</span>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './app.css';\nimport Habits from './components/habits';\nimport React, { Component } from 'react';\nimport Navbar from './components/navbar';\n\nclass App extends Component {\n  state = {\n    habits: [\n      {\n        id: 1,\n        name: 'Reading',\n        count: 0,\n      },\n      {\n        id: 2,\n        name: 'Running',\n        count: 0,\n      },\n      {\n        id: 3,\n        name: 'Coding',\n        count: 0,\n      },\n    ],\n  };\n\n  handleIncrement = habit => {\n    const habits = this.state.habits.map(item => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 };\n      }\n      return item;\n    });\n    this.setState({ habits }); //key: value의 이름이 같으면 하나로 써도 무방\n  };\n  handleDecrement = habit => {\n    // console.log(`handleDecrement ${habit}`);\n    // const habits = [...this.state.habits];\n    // const index = habits.indexOf(habit);\n    // const count = habits[index].count - 1; // 음수 제거, 배열 안에 들어 있는 아이템이 오브젝트를 바로 수정했죠\n    // habits[index].count = count > 0 ? count : 0; //  배열의 count를 직접수정해 매우 냄새나는 코드임\n    // this.setState({ habits: habits });\n    const habits = this.state.habits.map(item => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count - 1 };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n  handleDelete = habit => {\n    console.log(`handleDelete ${habit}`);\n    const habits = this.state.habits.filter(item => item.id !== habit.id);\n    this.setState({ habits });\n  };\n\n  // handleadd를 만들고 이름의 맞는 새로운 습관을 추가해준다\n  // state를 복하해오고 id를 고유한 아이디를 만들고, 주어진이름을 이용하고\n  handleAdd = name => {\n    const habits = [\n      ...this.state.habits,\n      { id: Date.now(), name: name, count: 0 },\n    ];\n    this.setState({ habits });\n  };\n  //handleReset은 아무것도 받지 않고 처리해 줄거임.\n  handleReset = () => {\n    const habits = this.state.habits.map(habit => {\n      if (habit.count !== 0) {\n        return { ...habit, count: 0 };\n      }\n      return habit;\n    });\n    this.setState({ habits });\n  };\n\n  render() {\n    return (\n      <>\n        <Navbar\n          totalcount={this.state.habits.filter(item => item.count > 0).length}\n        />\n\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React, { useRef, useState } from 'react';\n\nconst SimpleHabit = props => {\n  const [count, setCount] = useState(0);\n  const spanRef = useRef();\n\n  const handleIncrement = () => {\n    setCount(count + 1);\n  };\n\n  return (\n    <li className=\"habit\">\n      <span ref={spanRef} className=\"habit-name\">\n        Reading\n      </span>\n      <span className=\"habit-button habit-increase\" onClick={handleIncrement}>\n        {count}\n      </span>\n      <button>\n        <i className=\"nabvar-logo fas fa-leaf\"></i>\n      </button>\n    </li>\n  );\n};\nexport default SimpleHabit;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SimpleHabit />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}